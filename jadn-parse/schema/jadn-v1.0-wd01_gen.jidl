/* Generated from schema\jadn-v1.0-wd01.jadn, Fri Jul  5 09:34:46 2019 */
/*
       title: JADN Syntax
      module: oasis-open.org/openc2/jadn/v1.0
       patch: 0-wd01
 description: Syntax of a JSON Abstract Data Notation (JADN) module.
     exports: ['Schema', 'Uname']
*/

Types = ArrayOf(Type)

Type = Array {
     1 TypeName,                                 // TypeName::
     2 BaseType,                                 // BaseType::
     3 Options,                                  // TypeOptions::
     4 Desc,                                     // TypeDescription::
     5 JADN-Type(&2)                             // Fields::
}

BaseType = Enumerated {
     1 Binary,
     2 Boolean,
     3 Integer,
     4 Number,
     5 Null,
     6 String,
     7 Enumerated,
     8 Choice,
     9 Array,
    10 ArrayOf,
    11 Map,
    12 MapOf,
    13 Record
}

JADN-Type = Choice {
     1 Binary          Null,
     2 Boolean         Null,
     3 Integer         Null,
     4 Number          Null,
     5 Null            Null,
     6 String          Null,
     7 Enumerated      Items,
     8 Choice          Fields,
     9 Array           Fields,
    10 ArrayOf         Null,
    11 Map             Fields,
    12 MapOf           Null,
    13 Record          Fields
}

Items = ArrayOf(Item)

Item = Array {
     1 FieldID,                                  // ItemID::
     2 String,                                   // ItemValue::
     3 Desc                                      // ItemDescription::
}

Fields = ArrayOf(Field)

Field = Array {
     1 FieldID,                                  // FieldID::
     2 FieldName,                                // FieldName::
     3 TypeName,                                 // FieldType::
     4 Options,                                  // FieldOptions::
     5 Desc                                      // FieldDescription::
}

FieldID = Integer{0..*}

Options = ArrayOf(Option){0..10}

Option = String{1..*}

Desc = String

TypeName = String(%[A-Z][-$A-Za-z0-9]{0,31}%)

FieldName = String(%[A-Za-z][_A-Za-z0-9]{0,31}%)

Schema = Record {                            // Definition of a JADN schema module
     1 meta            Meta,                     // Information about this module
     2 types           Types                     // Types defined in this module
}

Meta = Map {                                 // Information about this module
     1 module          Uname,                    // Unique name/version
     2 patch           String optional,          // Patch version
     3 title           String optional,          // Title
     4 description     String optional,          // Description
     5 imports         Imports optional,         // Imported schema modules
     6 exports         Exports optional          // Data types exported by this module
}

Imports = ArrayOf(Import)

Import = Array {                             // Imported module id and unique name
     1 Nsid,                                     // nsid:: A short local identifier (namespace id) used within this module to refer to the imported module
     2 Uname                                     // namespace:: Unique name of imported module
}

Nsid = String(%[a-z][a-z0-9]{,7}%)

Uname = String /uri

Exports = ArrayOf(TypeName)
